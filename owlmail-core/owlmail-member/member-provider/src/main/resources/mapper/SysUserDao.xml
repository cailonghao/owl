<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mem.provider.dao.SysUserDao">

    <resultMap type="com.mem.provider.entity.SysUser" id="SysUserMap">
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="mobile" column="mobile" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createUserId" column="create_user_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="shopId" column="shop_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="SysUserMap">
        select user_id,
               username,
               password,
               email,
               mobile,
               status,
               create_user_id,
               create_time,
               shop_id
        from owlmail.sys_user
        where user_id = #{userId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SysUserMap">
        select user_id,
               username,
               password,
               email,
               mobile,
               status,
               create_user_id,
               create_time,
               shop_id
        from owlmail.sys_user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SysUserMap">
        select
        user_id, username, password, email, mobile, status, create_user_id, create_time, shop_id
        from owlmail.sys_user
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="mobile != null and mobile != ''">
                and mobile = #{mobile}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="createUserId != null">
                and create_user_id = #{createUserId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="shopId != null">
                and shop_id = #{shopId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into owlmail.sys_user(username, password, email, mobile, status, create_user_id, create_time, shop_id)
        values (#{username}, #{password}, #{email}, #{mobile}, #{status}, #{createUserId}, #{createTime}, #{shopId})
    </insert>

    <insert id="insertBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into owlmail.sys_user(username, password, email, mobile, status, create_user_id, create_time, shop_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.email}, #{entity.mobile}, #{entity.status},
            #{entity.createUserId}, #{entity.createTime}, #{entity.shopId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into owlmail.sys_user(username, password, email, mobile, status, create_user_id, create_time, shop_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.email}, #{entity.mobile}, #{entity.status},
            #{entity.createUserId}, #{entity.createTime}, #{entity.shopId})
        </foreach>
        on duplicate key update
        username = values(username) , password = values(password) , email = values(email) , mobile = values(mobile) ,
        status = values(status) , create_user_id = values(create_user_id) , create_time = values(create_time) , shop_id
        = values(shop_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update owlmail.sys_user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="mobile != null and mobile != ''">
                mobile = #{mobile},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId},
            </if>
        </set>
        where user_id = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from owlmail.sys_user
        where user_id = #{userId}
    </delete>

</mapper>

